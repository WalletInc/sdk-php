<?php
/**
 * WTDynamicVoucherSummaryTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * wallet-api
 *
 * API
 *
 * The version of the OpenAPI document: 2.1.514
 * Contact: development@wallet.inc
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * WTDynamicVoucherSummaryTest Class Doc Comment
 *
 * @category    Class
 * @description WTDynamicVoucherSummary
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class WTDynamicVoucherSummaryTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "WTDynamicVoucherSummary"
     */
    public function testWTDynamicVoucherSummary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "calc_error"
     */
    public function testPropertyCalcError()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "calc_error_details"
     */
    public function testPropertyCalcErrorDetails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_value"
     */
    public function testPropertyCurrentValue()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_value_decimal"
     */
    public function testPropertyCurrentValueDecimal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current_value_string"
     */
    public function testPropertyCurrentValueString()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "time_value_zero"
     */
    public function testPropertyTimeValueZero()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "time_value_zero_subtracted_amount"
     */
    public function testPropertyTimeValueZeroSubtractedAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_number_redeemed"
     */
    public function testPropertyTotalNumberRedeemed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_value_redeemed"
     */
    public function testPropertyTotalValueRedeemed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_budget_remaining"
     */
    public function testPropertyTotalBudgetRemaining()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_budget_exhausted"
     */
    public function testPropertyMaximumBudgetExhausted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_budget_exhausted_by"
     */
    public function testPropertyMaximumBudgetExhaustedBy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_budget_exhausted_by_decimal"
     */
    public function testPropertyMaximumBudgetExhaustedByDecimal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_budget_exhausted_by_string"
     */
    public function testPropertyMaximumBudgetExhaustedByString()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_budget_exhausted_total_value_redeemed"
     */
    public function testPropertyMaximumBudgetExhaustedTotalValueRedeemed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_budget_exhausted_total_value_redeemed_decimal"
     */
    public function testPropertyMaximumBudgetExhaustedTotalValueRedeemedDecimal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_budget_exhausted_total_value_redeemed_string"
     */
    public function testPropertyMaximumBudgetExhaustedTotalValueRedeemedString()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_amount_subtracted"
     */
    public function testPropertyTotalAmountSubtracted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_amount_subtracted_decimal"
     */
    public function testPropertyTotalAmountSubtractedDecimal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_amount_subtracted_string"
     */
    public function testPropertyTotalAmountSubtractedString()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_decremented_multiple"
     */
    public function testPropertyTotalDecrementedMultiple()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "redeemed_keys"
     */
    public function testPropertyRedeemedKeys()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expired"
     */
    public function testPropertyExpired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
