<?php
/**
 * AnalyticsApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * wallet-api
 *
 * API
 *
 * The version of the OpenAPI document: 2.1.514
 * Contact: development@wallet.inc
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AnalyticsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AnalyticsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for countVerifiedWalletPageViews
     *
     * Fetch wallet object counts within a given time frame that have a valid phone verification token.
     *
     */
    public function testCountVerifiedWalletPageViews()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for countWalletPageViews
     *
     * Fetch wallet object counts within a given time frame.
     *
     */
    public function testCountWalletPageViews()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsCountPartitionedByEmployee
     *
     * Count ad credits by employee.
     *
     */
    public function testFetchAnalyticsAdCreditsCountPartitionedByEmployee()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsCountPartitionedByPaymentDesign
     *
     * Count ad credits by payment design.
     *
     */
    public function testFetchAnalyticsAdCreditsCountPartitionedByPaymentDesign()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsCountPartitionedByValueType
     *
     * Count ad credits by value type.
     *
     */
    public function testFetchAnalyticsAdCreditsCountPartitionedByValueType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsRedemptionsAmountPartitionedByAdCreditID
     *
     * Fetch redemption amount of ad credits by Ad Credit.
     *
     */
    public function testFetchAnalyticsAdCreditsRedemptionsAmountPartitionedByAdCreditID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsRedemptionsAmountPartitionedByDate
     *
     * Fetch redemption amount of ad credits by date.
     *
     */
    public function testFetchAnalyticsAdCreditsRedemptionsAmountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsRedemptionsCountPartitionedByAdCreditID
     *
     * Count redemptions of ad credits by Ad Credit.
     *
     */
    public function testFetchAnalyticsAdCreditsRedemptionsCountPartitionedByAdCreditID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsRedemptionsCountPartitionedByDate
     *
     * Count redemptions of ad credits by date.
     *
     */
    public function testFetchAnalyticsAdCreditsRedemptionsCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsRefundsAmountPartitionedByAdCreditID
     *
     * Fetch refund amount of ad credits by Ad Credit.
     *
     */
    public function testFetchAnalyticsAdCreditsRefundsAmountPartitionedByAdCreditID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsRefundsAmountPartitionedByDate
     *
     * Fetch refund amount of ad credits by date.
     *
     */
    public function testFetchAnalyticsAdCreditsRefundsAmountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsRefundsCountPartitionedByAdCreditID
     *
     * Count refunds of ad credits by Ad Credit.
     *
     */
    public function testFetchAnalyticsAdCreditsRefundsCountPartitionedByAdCreditID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsRefundsCountPartitionedByDate
     *
     * Count refunds of ad credits by date.
     *
     */
    public function testFetchAnalyticsAdCreditsRefundsCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsScansCountPartitionedByAdCreditID
     *
     * Count scans of ad credits by Ad Credit.
     *
     */
    public function testFetchAnalyticsAdCreditsScansCountPartitionedByAdCreditID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsAdCreditsScansCountPartitionedByDate
     *
     * Count scans of ad credits by date.
     *
     */
    public function testFetchAnalyticsAdCreditsScansCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignWalletPageViews
     *
     * Fetch a campaign's wallet page views.
     *
     */
    public function testFetchAnalyticsCampaignWalletPageViews()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsCountPartitionedByCampaignID
     *
     * Count created campaigns by campaign.
     *
     */
    public function testFetchAnalyticsCampaignsCountPartitionedByCampaignID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsCountPartitionedByEmployee
     *
     * Count campaigns by employee.
     *
     */
    public function testFetchAnalyticsCampaignsCountPartitionedByEmployee()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsCountPartitionedByPaymentDesign
     *
     * Count campaigns by payment design.
     *
     */
    public function testFetchAnalyticsCampaignsCountPartitionedByPaymentDesign()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsCountPartitionedByValueType
     *
     * Count campaigns by value type.
     *
     */
    public function testFetchAnalyticsCampaignsCountPartitionedByValueType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsRedemptionsAmountPartitionedByCampaignID
     *
     * Fetch redemption amount of campaigns by Campaign.
     *
     */
    public function testFetchAnalyticsCampaignsRedemptionsAmountPartitionedByCampaignID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsRedemptionsAmountPartitionedByDate
     *
     * Fetch redemption amount of campaigns by date.
     *
     */
    public function testFetchAnalyticsCampaignsRedemptionsAmountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsRedemptionsCountPartitionedByCampaignID
     *
     * Count redemptions of campaigns by Campaign.
     *
     */
    public function testFetchAnalyticsCampaignsRedemptionsCountPartitionedByCampaignID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsRedemptionsCountPartitionedByDate
     *
     * Count redemptions of campaigns by date.
     *
     */
    public function testFetchAnalyticsCampaignsRedemptionsCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsRefundsAmountPartitionedByCampaignID
     *
     * Fetch refund amount of campaigns by Campaign.
     *
     */
    public function testFetchAnalyticsCampaignsRefundsAmountPartitionedByCampaignID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsRefundsAmountPartitionedByDate
     *
     * Fetch refund amount of campaigns by date.
     *
     */
    public function testFetchAnalyticsCampaignsRefundsAmountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsRefundsCountPartitionedByCampaignID
     *
     * Fetch refund amount of campaigns by Campaign.
     *
     */
    public function testFetchAnalyticsCampaignsRefundsCountPartitionedByCampaignID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsCampaignsRefundsCountPartitionedByDate
     *
     * Fetch refund amount of campaigns by date.
     *
     */
    public function testFetchAnalyticsCampaignsRefundsCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDeliveredOutboundMessagesCountPartitionedByDate
     *
     * Count delivered outbound messages by date.
     *
     */
    public function testFetchAnalyticsDeliveredOutboundMessagesCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDeliveredOutboundMessagesCountPartitionedByPhoneNumber
     *
     * Count delivered outbound messages by phone number.
     *
     */
    public function testFetchAnalyticsDeliveredOutboundMessagesCountPartitionedByPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDistinctWalletSessions
     *
     * Fetch distinct wallet sessions.
     *
     */
    public function testFetchAnalyticsDistinctWalletSessions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersCountPartitionedByEmployee
     *
     * Count dynamic vouchers by employee.
     *
     */
    public function testFetchAnalyticsDynamicVouchersCountPartitionedByEmployee()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersCountPartitionedByPaymentDesign
     *
     * Count dynamic vouchers by payment design.
     *
     */
    public function testFetchAnalyticsDynamicVouchersCountPartitionedByPaymentDesign()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersRedemptionsAmountPartitionedByDate
     *
     * Fetch redemption amount of dynamic vouchers by date.
     *
     */
    public function testFetchAnalyticsDynamicVouchersRedemptionsAmountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersRedemptionsAmountPartitionedByDynamicVoucherID
     *
     * Fetch redemption amount of dynamic vouchers by dynamic voucher.
     *
     */
    public function testFetchAnalyticsDynamicVouchersRedemptionsAmountPartitionedByDynamicVoucherID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersRedemptionsCountPartitionedByDate
     *
     * Count redemptions of dynamic vouchers by date.
     *
     */
    public function testFetchAnalyticsDynamicVouchersRedemptionsCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersRedemptionsCountPartitionedByDynamicVoucherID
     *
     * Count redemptions of dynamic vouchers by dynamic voucher.
     *
     */
    public function testFetchAnalyticsDynamicVouchersRedemptionsCountPartitionedByDynamicVoucherID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersRefundsAmountPartitionedByDate
     *
     * Fetch refund amount of dynamic vouchers by date.
     *
     */
    public function testFetchAnalyticsDynamicVouchersRefundsAmountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersRefundsAmountPartitionedByDynamicVoucherID
     *
     * Fetch refund amount of dynamic vouchers by dynamic voucher.
     *
     */
    public function testFetchAnalyticsDynamicVouchersRefundsAmountPartitionedByDynamicVoucherID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersRefundsCountPartitionedByDate
     *
     * Count refunds of dynamic vouchers by date.
     *
     */
    public function testFetchAnalyticsDynamicVouchersRefundsCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsDynamicVouchersRefundsCountPartitionedByDynamicVoucherID
     *
     * Count refunds of dynamic vouchers by dynamic voucher.
     *
     */
    public function testFetchAnalyticsDynamicVouchersRefundsCountPartitionedByDynamicVoucherID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsHelpDeskRequestsCreatedCountPartitionedByDate
     *
     * Count help desk requests by date.
     *
     */
    public function testFetchAnalyticsHelpDeskRequestsCreatedCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsHelpDeskRequestsResolvedCountPartitionedByDate
     *
     * Count resolved help desk requests by date.
     *
     */
    public function testFetchAnalyticsHelpDeskRequestsResolvedCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsHelpDeskRequestsResolvedCountPartitionedByEmployee
     *
     * Count resolved help desk requests by employee.
     *
     */
    public function testFetchAnalyticsHelpDeskRequestsResolvedCountPartitionedByEmployee()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsHelpDeskRequestsUnresolvedCountPartitionedByDate
     *
     * Count unresolved help desk requests by date.
     *
     */
    public function testFetchAnalyticsHelpDeskRequestsUnresolvedCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsItemWalletPageViews
     *
     * Fetch wallet page views of item.
     *
     */
    public function testFetchAnalyticsItemWalletPageViews()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsMemberCount
     *
     * Count members.
     *
     */
    public function testFetchAnalyticsMemberCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsMerchantCreditCount
     *
     * Count merchant credits.
     *
     */
    public function testFetchAnalyticsMerchantCreditCount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsOfferVsRedeemedAmountPartitionedByCampaignID
     *
     * Fetch offer vs redeemed amount by campaign.
     *
     */
    public function testFetchAnalyticsOfferVsRedeemedAmountPartitionedByCampaignID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsPaymentObjectBroadcastsCreatedCountPartitionedByDate
     *
     * Count created broadcasts by date.
     *
     */
    public function testFetchAnalyticsPaymentObjectBroadcastsCreatedCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsPaymentObjectBroadcastsIndividualExecutionTimeOfCompletedBroadcasts
     *
     * Fetch execution time of completed broadcasts.
     *
     */
    public function testFetchAnalyticsPaymentObjectBroadcastsIndividualExecutionTimeOfCompletedBroadcasts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsPaymentObjectBroadcastsScheduledCountPartitionedByDate
     *
     * Count scheduled broadcasts by date.
     *
     */
    public function testFetchAnalyticsPaymentObjectBroadcastsScheduledCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsPaymentObjectBroadcastsScheduledCountPartitionedByEmployee
     *
     * Count scheduled broadcasts by employee.
     *
     */
    public function testFetchAnalyticsPaymentObjectBroadcastsScheduledCountPartitionedByEmployee()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsPaymentObjectBroadcastsScheduledCountPartitionedByPhoneNumber
     *
     * Count scheduled broadcasts by phone number.
     *
     */
    public function testFetchAnalyticsPaymentObjectBroadcastsScheduledCountPartitionedByPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsPaymentObjectBroadcastsScheduledSMSCountPartitionedByDate
     *
     * Count scheduled SMS broadcasts by date.
     *
     */
    public function testFetchAnalyticsPaymentObjectBroadcastsScheduledSMSCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsSentOutboundMessagesCountPartitionedByDate
     *
     * Count sent outbound messages by date.
     *
     */
    public function testFetchAnalyticsSentOutboundMessagesCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsSentOutboundMessagesCountPartitionedByPhoneNumber
     *
     * Count sent outbound messages by phone number.
     *
     */
    public function testFetchAnalyticsSentOutboundMessagesCountPartitionedByPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsStaticVoucherWalletPageViews
     *
     * Fetch a static voucher's wallet page views.
     *
     */
    public function testFetchAnalyticsStaticVoucherWalletPageViews()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsTCPAStopCountPartitionedByDate
     *
     * Count TCPA (STOP) entries by date.
     *
     */
    public function testFetchAnalyticsTCPAStopCountPartitionedByDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsTCPAStopCountPartitionedByPhoneNumber
     *
     * Count TCPA (STOP) entries by phone number.
     *
     */
    public function testFetchAnalyticsTCPAStopCountPartitionedByPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsTotalAmountRedeemedPerMerchantCredit
     *
     * Fetch redeemed amount of merchant credits.
     *
     */
    public function testFetchAnalyticsTotalAmountRedeemedPerMerchantCredit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsTotalAmountRedeemedPerTier
     *
     * Fetch redeemed amoun̥t of tiers.
     *
     */
    public function testFetchAnalyticsTotalAmountRedeemedPerTier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsTotalAmountRefundedPerMerchantCredit
     *
     * Fetch refunded amount of merchant credits.
     *
     */
    public function testFetchAnalyticsTotalAmountRefundedPerMerchantCredit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsTotalAmountRefundedPerTier
     *
     * Fetch refunded amount of tiers.
     *
     */
    public function testFetchAnalyticsTotalAmountRefundedPerTier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsTotalPointsRedeemed
     *
     * Count redeemed points.
     *
     */
    public function testFetchAnalyticsTotalPointsRedeemed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsTotalPointsRefunded
     *
     * Count refunded points.
     *
     */
    public function testFetchAnalyticsTotalPointsRefunded()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchAnalyticsWalletSessionActivity
     *
     * Fetch session activity.
     *
     */
    public function testFetchAnalyticsWalletSessionActivity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for fetchWalletPageViewByID
     *
     * Fetch session activity by wallet page view ID.
     *
     */
    public function testFetchWalletPageViewByID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
